
##############################################

create table WEIGHT_DAY_NAT as
select *,
    case when Flag_active_offer=1 then TRUNOVER_ALL_WEEK_F1/TRUNOVER_ALL_F1
    else 0 end as Weight_DoW_Offer_SKU,
    case when Flag_active_offer=0 then TRUNOVER_ALL_WEEK_F0/TRUNOVER_ALL_F0
    else 0 end as Weight_DoW_Back_Shelf_SKU,
    case when Flag_active_offer=1 and Flag_new_sku=1 then 
        case when TURNOVER_LVL4_WEEK/TRUNOVER_ALL_
    else 0 end as Weight_DoW_Offer_LVL4_Mm12,
    case when Flag_active_offer=1 and Flag_new_sku=1 then TURNOVER_LVL5/TRUNOVER_ALL
    else 0 end as Weight_DoW_Offer_LVL5_Mm12,
    case when Flag_active_offer=1 and Flag_new_sku=1 then TURNOVER_LVL6/TRUNOVER_ALL
    else 0 end as Weight_DoW_Offer_LVL6_Mm12,
    case when Flag_active_offer=1 and Flag_new_sku=1 then TURNOVER_LVL7/TRUNOVER_ALL
    else 0 end as Weight_DoW_Offer_LVL7_Mm12
    from WEIGHT_DAY_NAT_M
            ;



##########################################################
create table WEIGHT_SITE_NAT
select a.ID_SKU,a.DT_DAY,b.Wright_LVL4_Define,b.Wright_LVL5_Define,b.Wright_LVL6_Define,b.Wright_LVL7_Define
from (
        select sum(Weight_DoW_Offer_LVL4_Mm12) as Wright_LVL4_Define, sum(Weight_DoW_Offer_LVL5_Mm12) as Wright_LVL5_Define,
                    sum(Weight_DoW_Offer_LVL6_Mm12) as Wright_LVL6_Define,sum(Weight_DoW_Offer_LVL7_Mm12) as Wright_LVL7_Define
                    from WEIGHT_DAY_NAT group by ID_SKU) b,
      I_FORECAST_SITE a
;



